// Profil speichern
const handleSubmit = async (e: React.FormEvent) => {
  e.preventDefault();
  
  console.log("üîç FORM SUBMISSION - Formular wird abgeschickt");
  
  // Validierung
  if (!username || username.length < 3) {
    toast({
      title: 'Ung√ºltiger Nutzername',
      description: 'Bitte w√§hle einen Nutzernamen mit mindestens 3 Zeichen',
      variant: 'destructive',
    });
    return;
  }

  if (!location) {
    toast({
      title: 'Standort fehlt',
      description: 'Bitte gib deinen Standort an',
      variant: 'destructive',
    });
    return;
  }

  if (!usernameAvailable) {
    toast({
      title: 'Nutzername nicht verf√ºgbar',
      description: 'Bitte w√§hle einen anderen Nutzernamen',
      variant: 'destructive',
    });
    return;
  }

  setSubmitting(true);

  try {
    let finalAvatarUrl = null;

    // Bild hochladen, falls vorhanden
    if (image) {
      setUploadingImage(true);
      try {
        console.log("üñºÔ∏è Starte Profilbild-Upload");
        
        if (!user?.uid) {
          throw new Error("Benutzer-ID nicht verf√ºgbar");
        }
        
        // Upload mit der verbesserten Funktion
        finalAvatarUrl = await uploadUserAvatar(image, user.uid);
        
        console.log("‚úÖ Profilbild erfolgreich hochgeladen:", 
                    finalAvatarUrl ? finalAvatarUrl.substring(0, 50) + "..." : "keine URL");
        
        // Ressourcen freigeben
        if (imageUrl && imageUrl.startsWith('blob:')) {
          URL.revokeObjectURL(imageUrl);
        }
        setImage(null);
        setImageUrl(null);
      } catch (uploadError) {
        console.error('‚ùå Fehler beim Hochladen des Avatars:', uploadError);
        toast({
          title: 'Upload fehlgeschlagen',
          description: uploadError instanceof Error ? uploadError.message : 'Das Profilbild konnte nicht hochgeladen werden',
          variant: 'destructive',
        });
        setUploadingImage(false);
        setSubmitting(false);
        return;
      } finally {
        setUploadingImage(false);
      }
    }

    // Profil aktualisieren
    if (!user?.uid) {
      throw new Error("Benutzer-ID nicht verf√ºgbar");
    }
    
    // Profilaktualisierungsdaten vorbereiten
    const profileData: Record<string, any> = {
      displayName: username,
      location: location.address,
      locationCoordinates: {
        lat: location.lat,
        lng: location.lng
      },
      locationSource: 'manual',
    };
    
    // F√ºge die Bild-URL nur hinzu, wenn ein neues Bild hochgeladen wurde
    if (finalAvatarUrl) {
      profileData.photoURL = finalAvatarUrl;
      profileData.avatarUrl = finalAvatarUrl;
    }
    
    console.log("üë§ Aktualisiere Benutzerprofil:", user.uid);
    await updateUserProfile(user.uid, profileData);

    // Nutzerprofil aktualisieren
    await refreshUserProfile();

    toast({
      title: 'Profil gespeichert',
      description: 'Dein Profil wurde erfolgreich eingerichtet!',
    });

    // Modal schlie√üen
    setOpen(false);
  } catch (error) {
    console.error('‚ùå Fehler beim Speichern des Profils:', error);
    toast({
      title: 'Fehler',
      description: 'Beim Speichern ist ein Fehler aufgetreten. Bitte versuche es erneut.',
      variant: 'destructive',
    });
  } finally {
    setSubmitting(false);
  }
};